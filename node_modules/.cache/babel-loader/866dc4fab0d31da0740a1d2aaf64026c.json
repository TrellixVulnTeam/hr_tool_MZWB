{"ast":null,"code":"var _jsxFileName = \"/home/ivana/projekti/react-hr-recruitment-tool/src/components/RecievedApplicantsTable/RecievedApplicantsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Box, CircularProgress, Snackbar, Typography } from '@material-ui/core';\nimport { format, formatDistance, parseISO } from 'date-fns';\nimport { Alert } from '@material-ui/lab';\nimport styles from './recieved-applicants-table.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultPosts = [];\n\nconst RecievedApplicantsTable = ({\n  onProfileSelection,\n  query\n}) => {\n  _s();\n\n  const [posts, setPosts] = React.useState(defaultPosts);\n  const [error, setError] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const getData = React.useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('https://api.hr-tool.proficodev.com/applicants');\n      const data = await response.json();\n      setPosts(data);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  React.useEffect(() => {\n    getData();\n  }, [getData]);\n\n  const handleTableRowClick = event => {\n    const {\n      currentTarget: {\n        dataset: {\n          id\n        }\n      }\n    } = event;\n\n    if (id) {\n      onProfileSelection(id);\n    }\n  };\n\n  const filteredPosts = React.useMemo(() => posts.filter(post => `${post.firstName} ${post.lastName}`.toLowerCase().includes(query.toLowerCase())), [query, posts]);\n\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const handleAlertButtonClick = () => setError('');\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: error !== '',\n      autoHideDuration: 6000,\n      onClose: handleAlertButtonClick,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleAlertButtonClick,\n        severity: \"error\",\n        children: `An error has occured. ${error}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.circularProgressContainer,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"7rem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: styles.tableContainer,\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"recieved applicants table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                classes: {\n                  root: styles.headerText\n                },\n                variant: \"body1\",\n                color: \"textSecondary\",\n                children: \"Applicant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                classes: {\n                  root: styles.headerText\n                },\n                variant: \"body1\",\n                color: \"textSecondary\",\n                children: \"Application Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                classes: {\n                  root: styles.headerText\n                },\n                variant: \"body1\",\n                color: \"textSecondary\",\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                classes: {\n                  root: styles.headerText\n                },\n                variant: \"body1\",\n                color: \"textSecondary\",\n                children: \"Experience\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredPosts.map(data => /*#__PURE__*/_jsxDEV(TableRow, {\n            classes: {\n              root: styles.tableRow\n            },\n            onClick: handleTableRowClick,\n            \"data-id\": data.id,\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              component: \"th\",\n              scope: \"data\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textPrimary\",\n                children: `${capitalizeFirstLetter(data.firstName)} ${capitalizeFirstLetter(data.lastName)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: data.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textPrimary\",\n                children: format(parseISO(data.date), 'd/MM/yyyy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: formatDistance(parseISO(data.date), new Date(), {\n                  addSuffix: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                color: \"textPrimary\",\n                children: capitalizeFirstLetter(data.department)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                classes: {\n                  root: styles.headerText\n                },\n                variant: \"body1\",\n                color: data.seniority.toLowerCase() === 'senior' ? 'primary' : 'error',\n                children: capitalizeFirstLetter(data.seniority)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecievedApplicantsTable, \"oGg2+JKFWe4a7pIFiNgYHPR9BYg=\");\n\n_c = RecievedApplicantsTable;\nexport default RecievedApplicantsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecievedApplicantsTable\");","map":{"version":3,"sources":["/home/ivana/projekti/react-hr-recruitment-tool/src/components/RecievedApplicantsTable/RecievedApplicantsTable.tsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Box","CircularProgress","Snackbar","Typography","format","formatDistance","parseISO","Alert","styles","defaultPosts","RecievedApplicantsTable","onProfileSelection","query","posts","setPosts","useState","error","setError","loading","setLoading","getData","useCallback","response","fetch","data","json","err","useEffect","handleTableRowClick","event","currentTarget","dataset","id","filteredPosts","useMemo","filter","post","firstName","lastName","toLowerCase","includes","capitalizeFirstLetter","str","charAt","toUpperCase","slice","handleAlertButtonClick","container","circularProgressContainer","tableContainer","root","headerText","map","tableRow","email","date","Date","addSuffix","department","seniority"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Box, CircularProgress, Snackbar, Typography } from '@material-ui/core';\nimport { format, formatDistance, parseISO } from 'date-fns';\nimport { Alert } from '@material-ui/lab';\n\nimport styles from './recieved-applicants-table.module.scss';\n\ninterface RecievedApplicantsTableProps {\n  onProfileSelection: (id: string) => void;\n  query: string;\n}\ninterface IPost {\n  id: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  date: string;\n  department: string;\n  seniority: string;\n}\nconst defaultPosts: IPost[] = [];\n\nconst RecievedApplicantsTable: React.FC<RecievedApplicantsTableProps> = ({ onProfileSelection, query }) => {\n  const [posts, setPosts] = React.useState(defaultPosts);\n  const [error, setError] = React.useState<string>('');\n  const [loading, setLoading] = React.useState<boolean>(false);\n\n  const getData = React.useCallback(async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('https://api.hr-tool.proficodev.com/applicants');\n      const data = await response.json();\n      setPosts(data);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    getData();\n  }, [getData]);\n\n  const handleTableRowClick = (event: React.MouseEvent<HTMLDivElement>) => {\n    const {\n      currentTarget: {\n        dataset: { id },\n      },\n    } = event;\n    if (id) {\n      onProfileSelection(id);\n    }\n  };\n\n  const filteredPosts = React.useMemo(\n    () => posts.filter(post => `${post.firstName} ${post.lastName}`.toLowerCase().includes(query.toLowerCase())),\n    [query, posts]\n  );\n\n  const capitalizeFirstLetter = (str: string) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const handleAlertButtonClick = () => setError('');\n\n  return (\n    <Box className={styles.container}>\n      {/* Error handle temporary solution */}\n      <Snackbar open={error !== ''} autoHideDuration={6000} onClose={handleAlertButtonClick}>\n        <Alert elevation={6} variant=\"filled\" onClose={handleAlertButtonClick} severity=\"error\">\n          {`An error has occured. ${error}`}\n        </Alert>\n      </Snackbar>\n      {loading ? (\n        <Box className={styles.circularProgressContainer}>\n          <CircularProgress size=\"7rem\" />\n        </Box>\n      ) : (\n        <TableContainer className={styles.tableContainer} component={Paper}>\n          <Table stickyHeader aria-label=\"recieved applicants table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  <Typography classes={{ root: styles.headerText }} variant=\"body1\" color=\"textSecondary\">\n                    Applicant\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"left\">\n                  <Typography classes={{ root: styles.headerText }} variant=\"body1\" color=\"textSecondary\">\n                    Application Date\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"left\">\n                  <Typography classes={{ root: styles.headerText }} variant=\"body1\" color=\"textSecondary\">\n                    Position\n                  </Typography>\n                </TableCell>\n                <TableCell align=\"left\">\n                  <Typography classes={{ root: styles.headerText }} variant=\"body1\" color=\"textSecondary\">\n                    Experience\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredPosts.map(data => (\n                <TableRow\n                  classes={{ root: styles.tableRow }}\n                  key={data.id}\n                  onClick={handleTableRowClick}\n                  data-id={data.id}\n                >\n                  <TableCell align=\"left\" component=\"th\" scope=\"data\">\n                    <Typography variant=\"body1\" color=\"textPrimary\">\n                      {`${capitalizeFirstLetter(data.firstName)} ${capitalizeFirstLetter(data.lastName)}`}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {data.email}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography variant=\"body1\" color=\"textPrimary\">\n                      {format(parseISO(data.date), 'd/MM/yyyy')}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      {formatDistance(parseISO(data.date), new Date(), { addSuffix: true })}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography variant=\"body1\" color=\"textPrimary\">\n                      {capitalizeFirstLetter(data.department)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography\n                      classes={{ root: styles.headerText }}\n                      variant=\"body1\"\n                      color={data.seniority.toLowerCase() === 'senior' ? 'primary' : 'error'}\n                    >\n                      {capitalizeFirstLetter(data.seniority)}\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </Box>\n  );\n};\n\nexport default RecievedApplicantsTable;\n"]},"metadata":{},"sourceType":"module"}