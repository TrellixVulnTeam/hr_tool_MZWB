{"ast":null,"code":"var _jsxFileName = \"/home/ivana/projekti/react-hr-recruitment-tool/src/views/Home/partials/ApplicationTypeSelector/ApplicationTypeSelector.tsx\";\nimport React from 'react';\nimport { Tab, Tabs, Box } from '@material-ui/core';\nimport DatePicker from '../DatePicker/DatePicker';\nimport styles from './application-type-selector.module.scss';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ApplicationType;\n\n(function (ApplicationType) {\n  ApplicationType[\"RECEIVED\"] = \"received\";\n  ApplicationType[\"IN_PROGRESS\"] = \"in_progress\";\n  ApplicationType[\"PENDING\"] = \"pending\";\n})(ApplicationType || (ApplicationType = {}));\n\nconst applicationTypeLabelMap = {\n  [ApplicationType.RECEIVED]: 'Received',\n  [ApplicationType.IN_PROGRESS]: 'In progress',\n  [ApplicationType.PENDING]: 'Pending'\n};\n\nconst ApplicationTypeSelector = ({\n  value,\n  onChange\n}) => {\n  const handleChange = (_, newValue) => {\n    onChange(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    mr: \"2rem\",\n    borderBottom: \"1px solid #E8EAEB\",\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      indicatorColor: \"primary\",\n      textColor: \"primary\",\n      classes: {\n        root: styles.tabs,\n        flexContainer: styles.container,\n        indicator: styles.indicator\n      },\n      value: value,\n      onChange: handleChange,\n      children: Object.entries(applicationTypeLabelMap).map(([type, label]) => /*#__PURE__*/_jsxDEV(Tab, {\n        classes: {\n          root: styles.tab,\n          wrapper: styles.wrapper\n        },\n        label: label,\n        value: type\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ApplicationTypeSelector;\nexport default ApplicationTypeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicationTypeSelector\");","map":{"version":3,"sources":["/home/ivana/projekti/react-hr-recruitment-tool/src/views/Home/partials/ApplicationTypeSelector/ApplicationTypeSelector.tsx"],"names":["React","Tab","Tabs","Box","DatePicker","styles","ApplicationType","applicationTypeLabelMap","RECEIVED","IN_PROGRESS","PENDING","ApplicationTypeSelector","value","onChange","handleChange","_","newValue","root","tabs","flexContainer","container","indicator","Object","entries","map","type","label","tab","wrapper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,QAA+B,mBAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAO,4CAAP;;AAEA,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAMZ,MAAMC,uBAAwD,GAAG;AAC/D,GAACD,eAAe,CAACE,QAAjB,GAA4B,UADmC;AAE/D,GAACF,eAAe,CAACG,WAAjB,GAA+B,aAFgC;AAG/D,GAACH,eAAe,CAACI,OAAjB,GAA2B;AAHoC,CAAjE;;AAWA,MAAMC,uBAA+D,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC/F,QAAMC,YAAY,GAAG,CAACC,CAAD,EAA2BC,QAA3B,KAAyD;AAC5EH,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,UAAU,EAAC,QAA/B;AAAwC,IAAA,cAAc,EAAC,eAAvD;AAAuE,IAAA,EAAE,EAAC,MAA1E;AAAiF,IAAA,YAAY,EAAC,mBAA9F;AAAA,4BACE,QAAC,IAAD;AACE,MAAA,cAAc,EAAC,SADjB;AAEE,MAAA,SAAS,EAAC,SAFZ;AAGE,MAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEZ,MAAM,CAACa,IADN;AAEPC,QAAAA,aAAa,EAAEd,MAAM,CAACe,SAFf;AAGPC,QAAAA,SAAS,EAAEhB,MAAM,CAACgB;AAHX,OAHX;AAQE,MAAA,KAAK,EAAET,KART;AASE,MAAA,QAAQ,EAAEE,YATZ;AAAA,gBAWGQ,MAAM,CAACC,OAAP,CAAehB,uBAAf,EAAwCiB,GAAxC,CAA4C,CAAC,CAACC,IAAD,EAAOC,KAAP,CAAD,kBAC3C,QAAC,GAAD;AACE,QAAA,OAAO,EAAE;AACPT,UAAAA,IAAI,EAAEZ,MAAM,CAACsB,GADN;AAEPC,UAAAA,OAAO,EAAEvB,MAAM,CAACuB;AAFT,SADX;AAME,QAAA,KAAK,EAAEF,KANT;AAOE,QAAA,KAAK,EAAED;AAPT,SAKOA,IALP;AAAA;AAAA;AAAA;AAAA,cADD;AAXH;AAAA;AAAA;AAAA;AAAA,YADF,eAyBE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAlCD;;KAAMd,uB;AAoCN,eAAeA,uBAAf","sourcesContent":["import React from 'react';\n\nimport { Tab, Tabs, Box } from '@material-ui/core';\nimport DatePicker from '../DatePicker/DatePicker';\n\nimport styles from './application-type-selector.module.scss';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport enum ApplicationType {\n  RECEIVED = 'received',\n  IN_PROGRESS = 'in_progress',\n  PENDING = 'pending',\n}\n\nconst applicationTypeLabelMap: Record<ApplicationType, string> = {\n  [ApplicationType.RECEIVED]: 'Received',\n  [ApplicationType.IN_PROGRESS]: 'In progress',\n  [ApplicationType.PENDING]: 'Pending',\n};\n\nexport interface ApplicationTypeSelectorProps {\n  value: ApplicationType;\n  onChange: (value: ApplicationType) => void;\n}\n\nconst ApplicationTypeSelector: React.FC<ApplicationTypeSelectorProps> = ({ value, onChange }) => {\n  const handleChange = (_: React.ChangeEvent<{}>, newValue: ApplicationType) => {\n    onChange(newValue);\n  };\n\n  return (\n    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" mr=\"2rem\" borderBottom=\"1px solid #E8EAEB\">\n      <Tabs\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        classes={{\n          root: styles.tabs,\n          flexContainer: styles.container,\n          indicator: styles.indicator,\n        }}\n        value={value}\n        onChange={handleChange}\n      >\n        {Object.entries(applicationTypeLabelMap).map(([type, label]) => (\n          <Tab\n            classes={{\n              root: styles.tab,\n              wrapper: styles.wrapper,\n            }}\n            key={type}\n            label={label}\n            value={type}\n          />\n        ))}\n      </Tabs>\n\n      <DatePicker />\n    </Box>\n  );\n};\n\nexport default ApplicationTypeSelector;\n"]},"metadata":{},"sourceType":"module"}