{"ast":null,"code":"import { Environment } from './environment';\nimport { Configuration } from './configuration';\nimport appSettings from './Settings/settings.json';\n\nclass ConfigurationBuilder {\n  /**\n   * This methods ensures there is only one instance of configuration object\n   */\n  static getConfiguration() {\n    if (!this.configuration) {\n      this.buildConfiguration();\n    }\n\n    return this.configuration;\n  }\n  /**\n   * Builds new instance of configuration from environment variables,\n   * appsettings.json file and appsettings.{environment}.json file\n   * where environment is value of REACT_APP_ENVIRONMENT environment variable\n   */\n\n\n  static buildConfiguration() {\n    const environment = process.env.REACT_APP_ENVIRONMENT;\n    const appSettingsEnvironmentFileName = this.getAppSettingsFileName(environment);\n\n    const appSettingsEnvironment = require(`./Settings/${appSettingsEnvironmentFileName}`);\n\n    const config = new Configuration(appSettings, appSettingsEnvironment, environment);\n    this.configuration = config;\n  }\n\n  static getAppSettingsFileName(environment) {\n    if (Object.values(Environment).includes(environment)) {\n      return `settings.${environment}.json`;\n    }\n\n    throw new Error('Undefined Environment!');\n  }\n\n}\n\nConfigurationBuilder.configuration = void 0;\nexport { ConfigurationBuilder };","map":{"version":3,"sources":["/home/ivana/projekti/react-hr-recruitment-tool/src/config/configuration.builder.ts"],"names":["Environment","Configuration","appSettings","ConfigurationBuilder","getConfiguration","configuration","buildConfiguration","environment","process","env","REACT_APP_ENVIRONMENT","appSettingsEnvironmentFileName","getAppSettingsFileName","appSettingsEnvironment","require","config","Object","values","includes","Error"],"mappings":"AAAA,SAASA,WAAT,QAA4B,eAA5B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AAEA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,oBAAN,CAA2B;AAGzB;AACF;AACA;AACgC,SAAhBC,gBAAgB,GAAkB;AAC9C,QAAI,CAAC,KAAKC,aAAV,EAAyB;AACvB,WAAKC,kBAAL;AACD;;AAED,WAAO,KAAKD,aAAZ;AACD;AAED;AACF;AACA;AACA;AACA;;;AACkC,SAAlBC,kBAAkB,GAAS;AACvC,UAAMC,WAAW,GAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAhC;AACA,UAAMC,8BAA8B,GAAG,KAAKC,sBAAL,CAA4BL,WAA5B,CAAvC;;AACA,UAAMM,sBAAsB,GAAGC,OAAO,CAAE,cAAaH,8BAA+B,EAA9C,CAAtC;;AACA,UAAMI,MAAM,GAAG,IAAId,aAAJ,CAAkBC,WAAlB,EAA+BW,sBAA/B,EAAuDN,WAAvD,CAAf;AAEA,SAAKF,aAAL,GAAqBU,MAArB;AACD;;AAEoC,SAAtBH,sBAAsB,CAACL,WAAD,EAAmC;AACtE,QAAIS,MAAM,CAACC,MAAP,CAAcjB,WAAd,EAA2BkB,QAA3B,CAAoCX,WAApC,CAAJ,EAAsD;AACpD,aAAQ,YAAWA,WAAY,OAA/B;AACD;;AAED,UAAM,IAAIY,KAAJ,CAAU,wBAAV,CAAN;AACD;;AAlCwB;;AAArBhB,oB,CACWE,a;AAoCjB,SAASF,oBAAT","sourcesContent":["import { Environment } from './environment';\nimport { Configuration } from './configuration';\n\nimport appSettings from './Settings/settings.json';\n\nclass ConfigurationBuilder {\n  private static configuration: Configuration;\n\n  /**\n   * This methods ensures there is only one instance of configuration object\n   */\n  public static getConfiguration(): Configuration {\n    if (!this.configuration) {\n      this.buildConfiguration();\n    }\n\n    return this.configuration;\n  }\n\n  /**\n   * Builds new instance of configuration from environment variables,\n   * appsettings.json file and appsettings.{environment}.json file\n   * where environment is value of REACT_APP_ENVIRONMENT environment variable\n   */\n  public static buildConfiguration(): void {\n    const environment = process.env.REACT_APP_ENVIRONMENT as Environment;\n    const appSettingsEnvironmentFileName = this.getAppSettingsFileName(environment);\n    const appSettingsEnvironment = require(`./Settings/${appSettingsEnvironmentFileName}`);\n    const config = new Configuration(appSettings, appSettingsEnvironment, environment);\n\n    this.configuration = config;\n  }\n\n  private static getAppSettingsFileName(environment: Environment): string {\n    if (Object.values(Environment).includes(environment)) {\n      return `settings.${environment}.json`;\n    }\n\n    throw new Error('Undefined Environment!');\n  }\n}\n\nexport { ConfigurationBuilder };\n"]},"metadata":{},"sourceType":"module"}