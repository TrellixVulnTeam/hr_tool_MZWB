{"ast":null,"code":"class Configuration {\n  /**\n   * Initializes new instance of configuration objects\n   * and sets its properties with priority in order from environment variables,\n   * settings.{environment}.json file or settings.json file\n   */\n  constructor(appSettings, appSettingsEnvironment, environment) {\n    this.environment = void 0;\n    this.settings = void 0;\n    this.environment = environment;\n    this.settings = { ...appSettings,\n      ...appSettingsEnvironment\n    };\n    Object.keys(this.settings).forEach(key => {\n      var _appSettingsEnvironme;\n\n      Object.defineProperty(this, key, {\n        value: (_appSettingsEnvironme = appSettingsEnvironment[key]) !== null && _appSettingsEnvironme !== void 0 ? _appSettingsEnvironme : appSettings[key]\n      });\n    });\n  }\n  /**\n   * throw new Error is not expression and cannot be used in combination with ?? operator\n   * @param message exception message\n   */\n\n\n  static throwErrorExpression(message) {\n    throw new Error(message);\n  }\n\n  getProperty(property) {\n    if (!Object.prototype.hasOwnProperty.call(this.settings, property)) {\n      Configuration.throwErrorExpression('Missing key.');\n    }\n\n    return this.settings[property];\n  }\n\n}\n\nexport { Configuration };","map":{"version":3,"sources":["/home/ivana/projekti/react-hr-recruitment-tool/src/config/configuration.ts"],"names":["Configuration","constructor","appSettings","appSettingsEnvironment","environment","settings","Object","keys","forEach","key","defineProperty","value","throwErrorExpression","message","Error","getProperty","property","prototype","hasOwnProperty","call"],"mappings":"AAEA,MAAMA,aAAN,CAAoB;AAKlB;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CACTC,WADS,EAETC,sBAFS,EAGTC,WAHS,EAIT;AAAA,SAbcA,WAad;AAAA,SAXcC,QAWd;AACA,SAAKD,WAAL,GAAmBA,WAAnB;AACA,SAAKC,QAAL,GAAgB,EACd,GAAGH,WADW;AAEd,SAAGC;AAFW,KAAhB;AAKAG,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKF,QAAjB,EAA2BG,OAA3B,CAAmCC,GAAG,IAAI;AAAA;;AACxCH,MAAAA,MAAM,CAACI,cAAP,CAAsB,IAAtB,EAA4BD,GAA5B,EAAiC;AAC/BE,QAAAA,KAAK,2BAAER,sBAAsB,CAACM,GAAD,CAAxB,yEAAiCP,WAAW,CAACO,GAAD;AADlB,OAAjC;AAGD,KAJD;AAKD;AAED;AACF;AACA;AACA;;;AACqC,SAApBG,oBAAoB,CAACC,OAAD,EAAkB;AACnD,UAAM,IAAIC,KAAJ,CAAUD,OAAV,CAAN;AACD;;AAEME,EAAAA,WAAW,CAAyCC,QAAzC,EAAyD;AACzE,QAAI,CAACV,MAAM,CAACW,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqC,KAAKd,QAA1C,EAAoDW,QAApD,CAAL,EAAoE;AAClEhB,MAAAA,aAAa,CAACY,oBAAd,CAAmC,cAAnC;AACD;;AAED,WAAO,KAAKP,QAAL,CAAcW,QAAd,CAAP;AACD;;AA1CiB;;AA4CpB,SAAShB,aAAT","sourcesContent":["import { Environment } from './environment';\n\nclass Configuration {\n  public readonly environment: Environment;\n\n  public readonly settings: Record<string, unknown>;\n\n  /**\n   * Initializes new instance of configuration objects\n   * and sets its properties with priority in order from environment variables,\n   * settings.{environment}.json file or settings.json file\n   */\n  constructor(\n    appSettings: Record<string, unknown>,\n    appSettingsEnvironment: Record<string, unknown>,\n    environment: Environment\n  ) {\n    this.environment = environment;\n    this.settings = {\n      ...appSettings,\n      ...appSettingsEnvironment,\n    };\n\n    Object.keys(this.settings).forEach(key => {\n      Object.defineProperty(this, key, {\n        value: appSettingsEnvironment[key] ?? appSettings[key],\n      });\n    });\n  }\n\n  /**\n   * throw new Error is not expression and cannot be used in combination with ?? operator\n   * @param message exception message\n   */\n  private static throwErrorExpression(message: string) {\n    throw new Error(message);\n  }\n\n  public getProperty<T = unknown, P extends string = string>(property: P): T {\n    if (!Object.prototype.hasOwnProperty.call(this.settings, property)) {\n      Configuration.throwErrorExpression('Missing key.');\n    }\n\n    return this.settings[property] as T;\n  }\n}\nexport { Configuration };\n"]},"metadata":{},"sourceType":"module"}